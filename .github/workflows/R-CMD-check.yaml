# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          install.packages('drat')
          install.packages("git2r")
          install.packages("pkgbuild")
          install.packages("usethis")
          install.packages("gert")
          install.packages("gh")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
      - name: Build Windows binary package
        if: runner.os == 'Windows'
        run: pkgbuild::build(binary = TRUE, dest_path = Sys.getenv("GITHUB_WORKSPACE"))
        shell: Rscript {0}

      - name: Upload Windows binary
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: learningR-Windows-binary
          path: ./*.zip

      - name: Add pkg to drat repo (macOS)
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pkg_tarball <- pkgbuild::build(binary = Sys.info()["sysname"] %in% c("Darwin", "Windows"))
          repodir <- path.expand("~/drat")
          gert::git_config_global_set(name = "user.name", value = "ablaette")
          gert::git_config_global_set(name = "user.email", value = "andreas.blaette@uni-due.de")
          # gert::git_clone(url = "https://github.com/PolMine/drat.git", path = repodir)
          usethis::create_from_github(repo_spec = "https://github.com/PolMine/drat.git", destdir = repodir, fork = TRUE)
          setwd(repodir)
          gert::git_config_set(name = "user.name", value = "ablaette")
          gert::git_config_set(name = "user.email", value = "andreas.blaette@uni-due.de")
          gert::git_branch_checkout(branch = "gh-pages", repo = repodir)
          message("--- gh::gh_token() ---")
          gh::gh_token()
          message("--- usethis::git_sitrep() ---")
          usethis::git_sitrep()
          drat::insertPackage(file = pkg_tarball, repodir = repodir)
          updated <- file.path(repodir, gert::git_status(repo = repodir)[["file"]])
          gert::git_add(repo = repodir, files = ".")
          gert::git_commit(repo = repodir, message = "GitHub Action build")
          # message("Pushin'")
          # gert::git_push(repo = repodir)
          message("Create pull request")
          usethis::pr_init("gh-pages")
        shell: Rscript {0}
